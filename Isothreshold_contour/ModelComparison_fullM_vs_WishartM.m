clear all; close all; clc
%Load the ground truth (simulated using CIELab)
load('Isothreshold_contour_CIELABderived.mat', 'D');
param   = D{1};
stim    = D{2};
results = D{3};
plt     = D{4};

%we have a total of nDataFiles, each of which was generated by a different
%seed
nDataFiles     = 10; %10
plane_slc      = 'GB plane';
numSimPerCond  = 240;%40, 80, 240,480
samplingMethod = 'Random';%'NearContour' or 'Random'
samplingJitter = 0.1;   %applicable only for 'NearContour'
samplingRange  = 0.025; %applicable only for 'Random'
analysisDir    = getpref('ColorEllipsoids', 'ELPSAnalysis');
myDataDir      = 'ModelComparison_DataFiles';
intendedDir    = fullfile(analysisDir, myDataDir);
addpath(intendedDir);

%load the fits by the full model
%whether we want to save the seed
flag_saveSeed = true;
if flag_saveSeed; str_extension = ['_rng1to', num2str(nDataFiles)];
else; str_extension = ''; end

if strcmp(samplingMethod, 'NearContour')
    fileName = [plane_slc,'_sim',...
        num2str(numSimPerCond), 'perCond_sampling',samplingMethod,...
        '_jitter',num2str(samplingJitter),str_extension,'.mat'];
elseif strcmp(samplingMethod, 'Random')
    fileName = [plane_slc,'_sim',...
        num2str(numSimPerCond), 'perCond_sampling',samplingMethod,...
        '_range',num2str(samplingRange),str_extension,'.mat'];
end

fullM = load(['Comparison_fullM_vs_gtM_',fileName],'fits');

%load the fits by the Wishart model
wishartM = load(['Comparison_WishartM_vs_gtM_',fileName],'modelComp');

%% grab stuff we need
nLL_fullM    = fullM.fits.nLL_allRef;
nParam_fullM = fullM.fits.num_free_param * size(fullM.fits.ellParam_est,1) * size(fullM.fits.ellParam_est,2);

nLL_WishartM = wishartM.modelComp.nLL_allRef;
nParam_WishartM = 3*3*2*2;

AIC_func = @(nLL, k) 2.*k + 2.*nLL;

AIC_fullM = AIC_func(nLL_fullM, nParam_fullM);
AIC_WishartM = AIC_func(nLL_WishartM, nParam_WishartM);

%
disp(mean(AIC_WishartM - AIC_fullM))
disp()



